plugins {
    id("org.jetbrains.kotlin.jvm") version "1.5.30-M1"
    id("org.jetbrains.kotlin.kapt") version "1.5.30-M1"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.0"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.30-M1"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.5.30-M1"
    id "com.google.cloud.tools.jib" version "3.1.1"
    id "application"
}

application {
    mainClass.set("me.evertonfs.ApplicationKt")
}

group = "me.evertonfs"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    kaptTest 'io.micronaut:micronaut-inject-java:2.5.11'
    testImplementation "io.micronaut.test:micronaut-test-kotest:2.3.7"
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.6.1'
    implementation "org.springframework.boot:spring-boot-starter-webflux:2.5.3"
    kapt("io.micronaut.data:micronaut-data-processor:2.5.0")
    kapt("io.micronaut.security:micronaut-security-annotations:2.5.0")
    implementation("io.micronaut:micronaut-http-client:2.5.11")
    implementation("io.micronaut:micronaut-management:2.5.11")
    implementation("io.micronaut:micronaut-runtime:2.5.11")
    implementation("io.micronaut:micronaut-tracing:2.5.11")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator:3.0.0")
    implementation("io.micronaut.cache:micronaut-cache-ehcache:2.4.0")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa:2.5.0")
//    implementation("io.micronaut.discovery:micronaut-discovery-client")
    implementation("io.micronaut.flyway:micronaut-flyway:4.0.0")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime:2.3.1")
//    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation "io.micronaut.configuration:micronaut-micrometer-core:1.3.1"
    implementation "io.micronaut.configuration:micronaut-micrometer-registry-prometheus:1.3.1"
    implementation("io.micronaut.micrometer:micronaut-micrometer-core:3.4.1")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3:1.1.2")
    implementation("io.micronaut.security:micronaut-security:2.5.0")
    implementation("io.micronaut.security:micronaut-security-jwt:2.5.0")
    implementation("io.micronaut.security:micronaut-security-oauth2:2.5.0")
    implementation("io.micronaut.security:micronaut-security-session:2.5.0")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:3.4.0")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.5.21")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.21")
    runtimeOnly("ch.qos.logback:logback-classic:1.2.5")
//    runtimeOnly("io.jaegertracing:jaeger-thrift")
    runtimeOnly("org.postgresql:postgresql:42.2.23.jre7")
    testImplementation("org.testcontainers:postgresql:1.16.0")
    testImplementation("org.testcontainers:testcontainers:1.16.0")
    implementation("io.micronaut:micronaut-validation:2.5.11")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin:2.12.4")

//    runtimeOnly("io.opentracing.contrib:opentracing-kafka-client:0.0.16")
    implementation("org.apache.kafka:kafka-clients:2.8.0")
    implementation("org.apache.kafka:kafka_2.12:2.8.0")

    testImplementation("org.hamcrest:hamcrest:2.2")
}

micronaut {
    runtime("tomcat")
    testRuntime("kotest")
    processing {
        incremental(true)
        annotations("me.evertonfs.*")
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

tasks {
}
